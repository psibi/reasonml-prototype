// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Page                = require("./Page.js");
var Block               = require("bs-platform/lib/js/block.js");
var Curry               = require("bs-platform/lib/js/curry.js");
var React               = require("react");
var Slider              = require("./Slider.js");
var HelloWorld          = require("./HelloWorld.js");
var ReasonReact         = require("reason-react/src/ReasonReact.js");
var PersonalInformation = require("./PersonalInformation.js");

var component = ReasonReact.reducerComponent("Main");

function str(prim) {
  return prim;
}

function handleRoute(currentRoute) {
  console.log("inside handle route");
  switch (currentRoute) {
    case 0 : 
        return ReasonReact.element(/* None */0, /* None */0, Page.make("This is home page", /* array */[]));
    case 1 : 
        return ReasonReact.element(/* None */0, /* None */0, HelloWorld.make(/* array */[]));
    case 2 : 
        return ReasonReact.element(/* None */0, /* None */0, Page.make("bye bye!", /* array */[]));
    
  }
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", undefined, React.createElement("a", {
                      href: "#hello"
                    }, "Hello world"), React.createElement("br", undefined), React.createElement("a", {
                      href: "#bye"
                    }, "Bye"), handleRoute(self[/* state */2][/* currentRoute */0]), React.createElement("br", undefined), ReasonReact.element(/* None */0, /* None */0, PersonalInformation.make("hello", /* array */[])), ReasonReact.element(/* None */0, /* None */0, Slider.make(/* true */1, /* false */0, 500, 1, 1, /* array */[
                          React.createElement("div", undefined, React.createElement("h3", undefined, "1")),
                          React.createElement("div", undefined, React.createElement("h3", undefined, "2")),
                          React.createElement("div", undefined, React.createElement("h3", undefined, "3")),
                          React.createElement("div", undefined, React.createElement("h3", undefined, "4")),
                          React.createElement("div", undefined, React.createElement("h3", undefined, "5")),
                          React.createElement("div", undefined, React.createElement("h3", undefined, "6"))
                        ])));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* currentRoute : Home */0];
    });
  newrecord[/* reducer */12] = (function (action, _) {
      switch (action) {
        case 0 : 
            return /* Update */Block.__(0, [/* record */[/* currentRoute : Home */0]]);
        case 1 : 
            return /* Update */Block.__(0, [/* record */[/* currentRoute : Hello */1]]);
        case 2 : 
            return /* Update */Block.__(0, [/* record */[/* currentRoute : Bye */2]]);
        
      }
    });
  newrecord[/* subscriptions */13] = (function (self) {
      return /* :: */[
              /* Sub */[
                (function () {
                    return ReasonReact.Router[/* watchUrl */1]((function (url) {
                                  var match = url[/* hash */1];
                                  switch (match) {
                                    case "bye" : 
                                        return Curry._1(self[/* send */4], /* Bye */2);
                                    case "hello" : 
                                        console.log("hello");
                                        return Curry._1(self[/* send */4], /* Hello */1);
                                    default:
                                      console.log("wildecard");
                                      return Curry._1(self[/* send */4], /* Home */0);
                                  }
                                }));
                  }),
                ReasonReact.Router[/* unwatchUrl */2]
              ],
              /* [] */0
            ];
    });
  return newrecord;
}

exports.component   = component;
exports.str         = str;
exports.handleRoute = handleRoute;
exports.make        = make;
/* component Not a pure module */
